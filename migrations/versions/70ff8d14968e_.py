"""empty message

Revision ID: 70ff8d14968e
Revises: 96a4a9823e1f
Create Date: 2025-03-01 14:23:52.358192

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '70ff8d14968e'
down_revision: Union[str, None] = '96a4a9823e1f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('deployment',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cluster_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('priority', sa.Enum('HIGH', 'MEDIUM', 'LOW', name='deploymentpriority'), nullable=False),
    sa.Column('requested_cpu', sa.Integer(), nullable=False),
    sa.Column('requested_ram', sa.Integer(), nullable=False),
    sa.Column('requested_gpu', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'QUEUED', 'RUNNING', 'PREEMPTED', 'FAILED', 'COMPLETED', name='deploymentstatus'), nullable=False),
    sa.Column('attempts', sa.Integer(), nullable=False),
    sa.Column('max_attempts', sa.Integer(), nullable=False),
    sa.Column('failure_reason', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('was_preempted', sa.Boolean(), nullable=False),
    sa.Column('preempted_count', sa.Integer(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cluster_id'], ['cluster.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('cluster', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('cluster', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('cluster', sa.Column('used_cpu', sa.Integer(), nullable=False))
    op.add_column('cluster', sa.Column('used_ram', sa.Integer(), nullable=False))
    op.add_column('cluster', sa.Column('used_gpu', sa.Integer(), nullable=False))
    op.add_column('organisation', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('organisation', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('organisationmember', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('organisationmember', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('user', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('user', sa.Column('updated_at', sa.DateTime(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user', 'updated_at')
    op.drop_column('user', 'created_at')
    op.drop_column('organisationmember', 'updated_at')
    op.drop_column('organisationmember', 'created_at')
    op.drop_column('organisation', 'updated_at')
    op.drop_column('organisation', 'created_at')
    op.drop_column('cluster', 'used_gpu')
    op.drop_column('cluster', 'used_ram')
    op.drop_column('cluster', 'used_cpu')
    op.drop_column('cluster', 'updated_at')
    op.drop_column('cluster', 'created_at')
    op.drop_table('deployment')
    # ### end Alembic commands ###
